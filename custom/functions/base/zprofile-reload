# Reloads files under profile.d

emulate -L zsh

local usage=(
	"Usage: $(get_funcname) [OPTION...] [FILE...] [DIR...]"
	"\t[-h|--help] : Print this help message"
	"\t[-f|--file] FILE : Reloads the specified file(s) under profile.d"
	"\t[-d|--dir] DIR : Reloads all files under the specified directory(ies) under profile.d"
)

## Setup parseopts
local void f_help
local -aU f_dirs f_files
zparseopts -a void -D -F -K -- \
	{h,-help}=f_help \
	{d,-dir}+:=f_dirs \
	{f,-file}+:=f_files \
	|| return 1

## Help/usage message
if [[ "$f_help" ]]; then
	>&2 print -l $usage
	[[ "$f_help" ]]; return $?
fi

# Prepare profiles to load
local -a flags_to_unset=(-f --file -d --dir)

f_files=(${${f_files:|flags_to_unset}:s/.zsh/})
f_dirs=(${f_dirs:|flags_to_unset})

local -aU profiles=()

# Load specified files/dirs from arguments
if [[ "$f_files" ]]; then
	profiles+=( "$ZDOTDIR"/profile.d/**/((${(j:|:)~f_files}).zsh)(-DN.) )
fi
if [[ "$f_dirs" ]]; then
	profiles+=( "$ZDOTDIR"/profile.d/**/(${(j:|:)~f_dirs})/**/*.zsh(-DN.) )
fi

# Load any potential match from arguments, file or directory
if (( $# )); then
	profiles+=( "$ZDOTDIR"/profile.d/**/(${(j:|:)@}){,/**/*}.zsh(-DN.) )
# Load all profiles if none specified
elif (( ! ${#profiles} )); then
	profiles=( "$ZDOTDIR"/profile.d/**/*.zsh(-DN.) )
fi

# Final check for valid profiles
if (( ! ${#profiles} )); then
	>&2 echo "No valid files or directories specified"
	return 1
fi

# Source resulting profiles
set -- $profiles
while (( $# )); do
	source "$1" || return $?
	shift
done
