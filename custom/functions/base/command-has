# Checks argument list for valid commands.
# Can make use of operators AND and OR.

# emulate -L zsh

local -r usage=(
	"Usage: ${funcstack[1]} [OPTION...] COMMAND..."
	"\t[-h|--help] : Print this help message"
	"\t[-v] / [-q] : Increase / Decrease verbosity"
	"\t[-o|--or] : Logical OR operator. Default behavior. Checks if any of the commands are valid."
	"\t[-a|--and] : Logical AND operator. Checks if all of the commands are valid."
)

## Setup func opts
## FIXME: add flag for ignoring if command is alias
local f_help f_verbosity f_exit
local logical=or # default
zparseopts -D -F -K -- \
	{h,-help}=f_help \
	v+=f_verbosity q+=f_verbosity \
	{o,-or}=logical \
	{a,-and}=logical \
	|| return 1

## Help/usage message
if (( ! $# )) || [[ "$f_help" ]]; then
	>&2 print -l $usage
	[[ "$f_help" ]]; return $?
fi

## Arg parsing
# Verbosity
local -i verbosity=0
f_verbosity="${(j::)f_verbosity//-}"
(( verbosity += (${#f_verbosity//q} - ${#${f_verbosity//v}}) ))
# Logical OR / AND
logical=${logical##*-}

# # function logic
local args="${(j:|:)@}"

## Print invalid commands
if (( $verbosity )); then
	local -aU valid=(${commands[(I)($args)]} ${functions[(I)($args)]})
	local -aU invalid=(${@:|valid})
	if (( ${#invalid} )); then
		print_fn -e "Not found:"
		>&2 echo "${(j:, :)invalid}"
	fi
fi

# Fastest process to check for commands
{ [[ -z "${logical#a(nd)#}" ]] && command -v ${@} &>/dev/null } ||
{ [[ -z "${logical#o(r)#}" ]] && (( ${#commands[(I)($args)]} + ${#functions[(I)($args)]} )) }
