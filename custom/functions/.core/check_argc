# Checker for argument counting in a function

emulate -L zsh

set -o err_return

local -r usage=(
	"Usage: $(get_funcname) minargs maxargs numargs"
	"\tminargs  - (0 <= int)            : minimum number of arguments"
	"\tmaxargs  - (0 <= minargs <= int) : maximum number of arguments"
	"\tnumargs  - (int)                 : \$# of the running function"
)
local -ir ARG_MAX=$(getconf ARG_MAX)

# Check if arguments are valid, meaning they're all positive integers
[[ $* =~ ^([0-9]+[[:space:]]+){2}[0-9]+$ ]] || {
	print_fn -e "Invalid arguments."
	>&2 print -l $usage
	return 1
}

# $1 - minimum number of args
# $2 - maximum number of args
# $3 - arg count
local -i minargs=$1 maxargs=$2 argc=$3
(( 0 == $maxargs )) && maxargs=$ARG_MAX

# Check if args of this function are correct
(( 2 <= $# && 0 <= $minargs && $minargs <= $maxargs )) || {
	>&2 print -l $usage
	return 2
}

# Check if the number of arguments is correct
(( $minargs <= $argc && $argc <= $maxargs )) || {
	print_fn -ec "Argument mismatch: [$minargs-${maxargs//$ARG_MAX/no_limit}] required, $argc given."
	return 3
}
